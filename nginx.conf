# ====================
# NGINX Configuration Otimizado para Produção
# ====================

# Configurações globais otimizadas
worker_processes auto;
worker_rlimit_nofile 65536;

events {
    worker_connections 2048;
    use epoll;
    multi_accept on;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # ====================
    # LOGGING OTIMIZADO
    # ====================
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time ua="$upstream_addr" us="$upstream_status" '
                    'ut="$upstream_response_time" ul="$upstream_response_length"';

    log_format json escape=json '{"time": "$time_iso8601", '
        '"remote_addr": "$remote_addr", '
        '"remote_user": "$remote_user", '
        '"request": "$request", '
        '"status": "$status", '
        '"body_bytes_sent": "$body_bytes_sent", '
        '"request_time": "$request_time", '
        '"http_referrer": "$http_referer", '
        '"http_user_agent": "$http_user_agent", '
        '"upstream_addr": "$upstream_addr", '
        '"upstream_status": "$upstream_status", '
        '"upstream_response_time": "$upstream_response_time"}';

    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;

    # ====================
    # PERFORMANCE OTIMIZADO
    # ====================
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    keepalive_requests 100;
    reset_timedout_connection on;
    client_body_timeout 10;
    client_header_timeout 10;
    send_timeout 10;

    # Buffer sizes otimizados
    client_max_body_size 10m;
    client_body_buffer_size 128k;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 4k;
    output_buffers 1 32k;
    postpone_output 1460;

    # Connection pooling
    types_hash_max_size 2048;
    types_hash_bucket_size 64;

    # Gzip
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/javascript
        application/xml+rss
        application/json;

    # ====================
    # RATE LIMITING OTIMIZADO
    # ====================
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=auth:10m rate=5r/s;
    limit_req_zone $binary_remote_addr zone=webhook:10m rate=30r/s;
    limit_req_status 429;

    # Connection limiting
    limit_conn_zone $binary_remote_addr zone=conn_limit_per_ip:10m;
    limit_conn conn_limit_per_ip 10;

    # ====================
    # UPSTREAMS OTIMIZADOS
    # ====================
    upstream app_backend {
        least_conn;
        server app:3000 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }


    # ====================
    # SERVIDOR PRINCIPAL OTIMIZADO
    # ====================
    server {
        listen 80;
        server_name _;

        # Connection limiting
        limit_conn conn_limit_per_ip 10;

        # ====================
        # SEGURANÇA
        # ====================
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:;" always;

        # ====================
        # API PRINCIPAL
        # ====================
        location /api/ {
            # Rate limiting
            limit_req zone=api burst=20 nodelay;

            # CORS
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;

            # Proxy otimizado
            proxy_pass http://app_backend;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $http_connection;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $server_name;
            proxy_cache_bypass $http_upgrade;

            # Timeouts otimizados
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
            proxy_buffering on;
            proxy_buffer_size 128k;
            proxy_buffers 4 256k;
            proxy_busy_buffers_size 256k;
        }

        # ====================
        # WEBHOOKS WHATSAPP
        # ====================
        location /api/whatsapp/webhook {
            # Rate limiting específico para webhooks
            limit_req zone=webhook burst=50 nodelay;

            # Sem cache para webhooks
            add_header Cache-Control "no-cache, no-store, must-revalidate" always;

            proxy_pass http://app_backend;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            proxy_set_header Content-Type $content_type;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Timeouts específicos para webhooks
            proxy_connect_timeout 10s;
            proxy_send_timeout 10s;
            proxy_read_timeout 10s;
        }


        # ====================
        # HEALTH CHECK
        # ====================
        location /health {
            access_log off;
            proxy_pass http://app_backend/health;
            proxy_connect_timeout 5s;
            proxy_send_timeout 5s;
            proxy_read_timeout 5s;
        }

        # ====================
        # STATIC FILES CACHE
        # ====================
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
            expires 1y;
            add_header Cache-Control "public, immutable" always;
            add_header X-Content-Type-Options "nosniff" always;
            access_log off;

            # Tentar servir do backend se não encontrado localmente
            try_files $uri @proxy;
        }

        # ====================
        # FAVICON E ROBOTS
        # ====================
        location = /favicon.ico {
            log_not_found off;
            access_log off;
            return 204;
        }

        location = /robots.txt {
            log_not_found off;
            access_log off;
            return 200 "User-agent: *\nDisallow: /api/";
        }

        # ====================
        # FALLBACK PARA API
        # ====================
        location @proxy {
            proxy_pass http://app_backend;
        }

        # ====================
        # DEFAULT RESPONSE
        # ====================
        location / {
            return 200 "API de Agendamento - Status: OK\n";
            add_header Content-Type text/plain;
            access_log off;
        }
    }

    # Servidor HTTPS (descomente e configure se usar SSL)
    # server {
    #     listen 443 ssl http2;
    #     server_name your-domain.com;
    #
    #     ssl_certificate /etc/nginx/ssl/cert.pem;
    #     ssl_certificate_key /etc/nginx/ssl/key.pem;
    #
    #     # SSL settings
    #     ssl_protocols TLSv1.2 TLSv1.3;
    #     ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384;
    #     ssl_prefer_server_ciphers off;
    #
    #     # Mesmo conteúdo do server 80
    #     location /api/ {
    #         proxy_pass http://app_backend;
    #         # ... configurações iguais
    #     }
    #
    # }
}
