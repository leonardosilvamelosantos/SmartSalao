/**
 * Backup do arquivo original antes da corre√ß√£o de importa√ß√£o circular
 */
// Detectar qual banco usar baseado no ambiente
const usePostgreSQL = process.env.NODE_ENV === 'production' || 
                     process.env.DB_TYPE === 'postgresql' || 
                     process.env.USE_POSTGRESQL === 'true';

let pool, dbConfig;

if (usePostgreSQL) {
  console.log('üêò Usando PostgreSQL para produ√ß√£o');
  // Importar configura√ß√£o PostgreSQL (antigo, causava confus√£o)
  const postgresConfig = require('../../config/database');
  pool = postgresConfig;
  dbConfig = {
    type: 'postgresql',
    host: process.env.DB_HOST || 'localhost',
    port: process.env.DB_PORT || 5432,
    database: process.env.DB_NAME || 'agendamento'
  };
} else {
  console.log('üóÉÔ∏è Usando SQLite para desenvolvimento');
  const sqliteConfig = require('./database-sqlite');
  pool = sqliteConfig.pool;
  dbConfig = sqliteConfig.dbConfig;
}

async function testConnection() { /* ... omitido no backup ... */ }
async function executeQuery(query, params = []) { /* ... omitido no backup ... */ }
async function executeTransaction(callback) { /* ... omitido no backup ... */ }

module.exports = {
  pool,
  dbConfig,
  testConnection,
  executeQuery,
  executeTransaction,
  isPostgreSQL: usePostgreSQL,
  isSQLite: !usePostgreSQL
};


